package cn.com.flaginfo.ws;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.4
 * 2013-05-15T13:52:38.531+08:00
 * Generated source version: 2.7.4
 * 
 */
@WebServiceClient(name = "Sms", 
                  wsdlLocation = "classpath:wsdl/sms-unicom.wsdl",
                  targetNamespace = "http://ws.flaginfo.com.cn") 
public class Sms_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.flaginfo.com.cn", "Sms");
    public final static QName SmsHttpPort = new QName("http://ws.flaginfo.com.cn", "SmsHttpPort");
    static {
        URL url = Sms_Service.class.getClassLoader().getResource("wsdl/sms-unicom.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(Sms_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/sms-unicom.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    public Sms_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Sms_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Sms_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns SmsPortType
     */
    @WebEndpoint(name = "SmsHttpPort")
    public SmsPortType getSmsHttpPort() {
        return super.getPort(SmsHttpPort, SmsPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SmsPortType
     */
    @WebEndpoint(name = "SmsHttpPort")
    public SmsPortType getSmsHttpPort(WebServiceFeature... features) {
        return super.getPort(SmsHttpPort, SmsPortType.class, features);
    }

}
