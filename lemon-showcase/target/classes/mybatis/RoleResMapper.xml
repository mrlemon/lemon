<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.coolinc.dao.RoleResDao" >
  <resultMap id="BaseResultMap" type="cn.coolinc.entity.RoleRes" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="res_type" property="resType" jdbcType="INTEGER" />
    <result column="res_id" property="resId" jdbcType="INTEGER" />
    <result column="role_code" property="roleCode" jdbcType="VARCHAR" /> 
	<result column="res_code" property="resCode" jdbcType="VARCHAR" />
  </resultMap>
 
  <insert id="save" parameterType="cn.coolinc.entity.RoleRes" >
    insert into ss_role_res (id, role_id, res_type, 
      res_id)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{resType,jdbcType=INTEGER}, 
      #{resId,jdbcType=INTEGER})
  </insert>
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from ss_role_res
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByClause">
	delete from ss_role_res
	<where>
		<if test="id != null" >
        and id = #{id,jdbcType=INTEGER}
        </if>
		<if test="roleId != null" >
        and role_id = #{roleId,jdbcType=INTEGER}
      </if>
      <if test="resType != null" >
        and res_type = #{resType,jdbcType=INTEGER}
      </if>
      <if test="resId != null" >
        and res_id = #{resId,jdbcType=INTEGER}
      </if>
	</where>
   </delete>
  <update id="update" parameterType="cn.coolinc.entity.RoleRes" >
    update ss_role_res
    set role_id = #{roleId,jdbcType=INTEGER},
      res_type = #{resType,jdbcType=INTEGER},
      res_id = #{resId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <sql id="whereClause">
		<where>
			<if test="id != null" >
	        and id = #{id,jdbcType=VARCHAR}
	        </if>
			<if test="roleId != null" >
	        and role_id = #{roleId,jdbcType=VARCHAR}
	      </if>
	      <if test="resType != null" >
	        and res_type = #{resType,jdbcType=VARCHAR}
	      </if>
	      <if test="resId != null" >
	        and res_id = #{resId,jdbcType=VARCHAR}
	      </if>
		</where>
	</sql>
  
  <select id="findOne" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select t.*,t1.code as role_code,(case t.res_type when '1' then t2.url when '2' then t3.code end) as res_code
		from ss_role_res t
		left join ss_role t1 on t.role_id=t1.id
		left join ss_menu t2 on t.res_id=t2.id
		left join ss_function t3 on t.res_id=t3.id
		where t.id = #{id,jdbcType=VARCHAR}
	</select>

	<select id="findAll" resultMap="BaseResultMap">
		select t.*,t1.code as role_code,(case t.res_type when '1' then t2.url when '2' then t3.code end) as res_code
		from ss_role_res t
		left join ss_role t1 on t.role_id=t1.id
		left join ss_menu t2 on t.res_id=t2.id
		left join ss_function t3 on t.res_id=t3.id
		<include refid="whereClause"/>
	</select>
	
</mapper>